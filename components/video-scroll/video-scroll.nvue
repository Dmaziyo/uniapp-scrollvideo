<template>
	<view >
		<swiper :style="{
			width:windowWidth+'px',
			height:windowHeight+'px',
			backgroundColor: '#000000'
		}"
		 :vertical="true" @animationfinish="animationfinish" @change="change" :current="current" :indicator-dots="false">
			<swiper-item v-for="(list,index) in dataList">
				<view v-if="Math.abs(k-index)<=1">
					<view>
						<video
						v-if="isShow"
						:id="list._id+idx+index"
						:show-loading="false"
						:page-gesture="false"
						:show-center-play-btn="false"
						:enable-progress-gesture="false"
						:loop="false"
						:muted="list.isplay"
						:controls="true"
						:http-cache="true"
						:show-fullscreen-btn="true"
						:src="list.src"
						@ended="ended"
						@click="tapVideoHover(list.state,$event)"
						:style="'width: '+ windowWidth +'px; height: '+ windowHeight +'px; background-color: #000000;'"
						:poster="list.src+'?x-oss-process=video/snapshot,t_100,f_jpg'"
						></video>
		
					</view>
					<!-- 暂停界面 -->
			 		<view v-if="list.state=='pause'" class="videoHover" @click="tapVideoHover(list.state,$event)" :style="'width: '+ windowWidth +'px; height: '+ windowHeight +'px;'">
						<image  class="playState" src="@/static/img/index/play.png"></image>
					</view> 
					<view class="userInfo">
						<!-- 头像 -->
						<image  class="userAvatar" :src="list.href" mode="aspectFill"></image>
						<!-- 点赞 -->
						<view @click="cLike(list.like);" style="opacity: 0.9; margin-top: 17px;">
							<image v-if="list.like" src="@/static/img/index/xin.png" style="width: 40px; height: 40px; position: absolute; right: 6px;"></image>
							<image v-if="!list.like" src="@/static/img/index/xin-2.png" style="width: 40px; height: 40px; position: absolute; right: 6px;"></image>
							<text style="color: #FFFFFF; margin-top: 5px; font-size: 14px; text-align: center; margin-top: 40px; font-weight: bold;" :class="{'likeNumActive':list.like}">{{list.like_n}}</text>
						</view>
						<!-- 收藏 -->
						<view @click="cStar(list.star);" class="star"  style="opacity: 0.9; margin-top: 17px;">
							<image v-if="list.star" src="@/static/img/index/star2.png" style="width: 35px; height: 35px; position: absolute; right: 7px;"></image>
							<image v-if="!list.star" src="@/static/img/index/star1.png" style="width: 40px; height: 40px; position: absolute; right: 6px;"></image>
							<text style="color: #FFFFFF; margin-top: 5px; font-size: 14px; font-weight: bold; text-align: center; margin-top: 40px;">{{list.star_n}}</text>
						</view>
						<!-- 分享 -->
						<view @click="share" style="opacity: 0.9; margin-top: 17px;">
							<image src="@/static/img/index/share-fill.png" style="width: 40px; height: 40px; position: absolute; right: 5px;"></image>
							<text style="color: #FFFFFF; margin-top: 5px; font-size: 14px; text-align: center; font-weight: bold; margin-top: 40px;">0</text>
						</view>
						<!-- 评论 -->
						<view @click="cComment();" style="opacity: 0.9; margin-top: 17px;">
							<image  src="@/static/img/index/comment.png" style="width: 40px; height: 40px; position: absolute; right: 6px;"></image>
							<text style="color: #FFFFFF; margin-top: 5px; font-size: 14px; text-align: center; margin-top: 40px; font-weight: bold;" >0</text>
						</view>
						<!-- 聊天 -->
						<view   style="opacity: 0.9; margin-top: 17px;">
							<image src="@/static/img/index/chat.png" style="width: 35px; height: 35px; position: absolute; right: 7px;"></image>
							<text style="color: #FFFFFF; margin-top: 5px; font-size: 14px; font-weight: bold; text-align: center; margin-top: 40px;"></text>
						</view>
						
					</view>
					<view class="content">
						<text class="userName" :style="'width: '+ (windowWidth - 90) +'px;'">{{list.username}}</text>
							<text  :style="'width: '+ (windowWidth - 90) +'px;'">
								<text class="iconfont icon-wxbdingwei"></text>
								{{list.location}}</text>
						<text class="words" :style="'width: '+ (windowWidth - 90) +'px;'">{{list.msg}}-{{k+1}}</text>
					</view>
				</view>
			</swiper-item>
		</swiper>
	</view>
</template>

<script>
	export default {
		name:'video-scroll',
		props:{
			req_url:{
				type:String,
				default: "https://bdb24c6d-8c19-4f80-8e7e-c9c9f037f131.bspapp.com/video"
			},
			paused:{
				type:Boolean,
				default: false
			},
			idx:{
				type:String,
				required:true
			}
		},
		data() {
			return {
				windowWidth: 0,
				windowHeight: 0,
				platform: "",
				deleteHeight: 0,
				dataList: [],
				k: 0,  
				oldVideo: "",
				voice: "",
				timeout: "",
				current: 0,
		
				videoID: "",
				isShow: false
			}
		},

		watch:{
			async k(k,old_k){
				// 暂停old_video
				this.isShow = false
				this.dataList[old_k].playIng = false//如果视频暂停，就加载封面
				this.dataList[old_k].isplay = true
				this.dataList[old_k].state = 'pause'
				// uni.createVideoContext(this.dataList[old_k]._id+''+old_k,this).seek(0)
				// uni.createVideoContext(this.dataList[old_k]._id+''+old_k,this).pause()
				console.log('预留第' + (old_k + 1) + '个视频：' + this.dataList[old_k]._id+''+old_k)
				// 2.0版本已经去掉了下面这一句，视频不用暂停，只需要把声音禁止就行
				uni.createVideoContext(this.dataList[old_k]._id + this.idx + old_k,this).stop()//如果视频暂停，那么旧视频停止，这里的this.dataList[old_k]._id + '' + old_k，后面加 old_k 是为了每一个视频的 id 值不同，这样就可以大程度的避免串音问题
				console.log('已经暂停 --> 第' + (old_k + 1) + '个视频～')//提示
				this.dataList[k].state = 'play'
				this.isShow = true
				await setTimeout( async ()=>{
					uni.createVideoContext(this.dataList[k]._id+this.idx+k,this).play()
					await setTimeout(()=>{
						this.dataList[k].isplay = false
						this.dataList[k].playIng = true
					},50)
				},250)
				var p = k+1;
				console.log('预加载第' + (p + 1) + '个视频：' + this.dataList[p]._id+''+p)
			},
			paused(newVal, oldVal){
				console.log(newVal);
				if(newVal){
					this.tapVideoHover('continue')
					
				}
				else{
					this.tapVideoHover('pause')
				}
			}
		},
		// 初始化获取视频
		created() {
			this.platform = uni.getSystemInfoSync().platform
			var model = uni.getSystemInfoSync().model
			if(this.platform == 'ios' && (model !== 'iPhone6' || model !== 'iPhone6s' || model !== 'iPhone7' || model !== 'iPhone8')){
				this.deleteHeight = 0//有 tabbar的 修改这里可以改变视频高度
			}
			this.windowWidth = uni.getSystemInfoSync().windowWidth
			this.windowHeight = uni.getSystemInfoSync().windowHeight
			

			this.get() //刚进入页面加载数据
		},
		beforeMount(){
			console.log('回到前台');
			if(this.dataList.length !== 0){
				// 自动播放
				this.dataList[this.k].state = 'play';
				uni.createVideoContext(this.dataList[this.k]._id+''+this.k,this).play()
			}
		},
		deactivated(){
			this.dataList[this.k].state = 'pause';//界面隐藏也要停止播放视频
			uni.createVideoContext(this.dataList[this.k]._id+''+this.k,this).pause();
			console.log('到后台');
		},
		methods: {
			ended(){
				// 自动切换下一个视频
				this.current = this.k+1
			},
			//点击播放&&暂停
			tapVideoHover(state,event){
				console.log('state--',state);
				if(state=='play'||state=='continue'){
					this.dataList[this.k].state = 'pause';
				}else{
					this.dataList[this.k].state = 'continue';
				}
				if(this.dataList[this.k].state == 'continue'){
					uni.createVideoContext(this.dataList[this.k]._id+this.idx+this.k,this).play();//暂停以后继续播放
				}
				if(this.dataList[this.k].state == 'pause'){
					uni.createVideoContext(this.dataList[this.k]._id+this.idx+this.k,this).pause();//暂停以后继续播放
				}
			},
			// 修改视频src
			change(event){
				this.k = event.detail.current
			},
			// 判断是否为最后一个视频,并get获取视频列表
			animationfinish(event){
				if(this.k == this.dataList.length - 1){
					this.GET()
				}
			},
			GET(){
				uni.request({
					url: this.req_url,
					method: 'POST',
					data:{
						info: 'get_video'
					},
					success: (res) => {
						var msg = res.data.data
						// 这里把视频添加到视频列表
						for (let i = 0; i < msg.length; i++) {
							msg[i].star=false
							msg[i].star_n=0
							msg[i].location = '上海市'
							this.dataList.push(msg[i])
						}
					}
				})
			},
			get(){
			// 获取后台视频数据
				uni.request({
					url: this.req_url,
					method: 'POST',
					data:{
						info: 'get_video'
					},
					success: (res) => {
						console.log(res.data.data);
						this.isShow = false;
						var msg = res.data.data
						// 将视频添加至dataList
						for (let i = 0; i < msg.length; i++) {
							msg[i].star=false
							msg[i].star_n=0
							msg[i].location = '上海市'
							this.dataList.push(msg[i])
						}
						// 静音播放当前视频
						setTimeout(()=>{
							this.isShow = true;
							this.dataList[this.k].isplay = false
							this.dataList[this.k].state = 'pause'
							// 将对应video id的el创建一个ctx
							uni.createVideoContext(this.dataList[this.k]._id+this.idx+this.k,this).pause()
							this.dataList[this.k].playIng = false
						},200)
						this.videoID = this.dataList[this.k]._id
						//  预加载
						var p = this.k
						++p
						setTimeout(()=>{
							uni.createVideoContext(this.dataList[p]._id+this.idx+p,this).play()
						},20)
						// 用于清除没加载完的
						clearTimeout(this.timeout)
						this.timeout = setTimeout(()=>{
							uni.createVideoContext(this.dataList[p]._id+this.idx+p,this).seek(0)
							uni.createVideoContext(this.dataList[p]._id+this.idx+p,this).pause()
							console.log('预加载第' + (p + 1) + '个视频：' + this.dataList[p]._id+''+p)
						},1500)
						// 预加载结束
					}
				})
			},
			share(){
				uni.showToast({
					title: '未开发',
					icon: 'none',
					position: 'bottom',
					duration: 300
				})
			},
	
			cComment(){
				uni.showToast({
					title: '未开发',
					icon: 'none',
					position: 'bottom',
					duration: 300
				})
			},
			cLike(sss){
				this.dataList[this.k].like = !this.dataList[this.k].like
				const video = this.dataList[this.k];
				sss?video.like_n -= 1:video.like_n += 1;
			},
			cStar(isStar){
				this.dataList[this.k].star = !this.dataList[this.k].star
				const video = this.dataList[this.k];
				isStar?video.star_n -= 1:video.star_n += 1;
			}
		}
	}
</script>

<style >
@import url("./index.css");
	
</style>
